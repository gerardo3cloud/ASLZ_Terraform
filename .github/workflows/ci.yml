# This is a basic workflow to help you get started with Actions

name: terraform_deployment

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  #push:
  #  branches: [ "main" ]
  #pull_request:
  #  branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
    workflow_dispatch:
      inputs:
        directory:
            description: "choose project"
            required: true
            type: choice
            options:
              - Project1
              - Project2
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
 
  terraformjob:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      - name: change directory
        run: cd ${{ github.event.inputs.directory }}

      # Runs a single command using the runners shell
      - name: setup terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.9.4"

      # Runs a set of commands using the runners shell
      - name: setting up credentials
        run: |
          export ARM_CLIENT_ID=${{ secrets.CLIENT_ID }}
          export ARM_CLIENT_SECRET=${{ secrets.CLIENT_SECRET }}
          export ARM_SUBSCRIPTION_ID=${{ secrets.SUBSCRIPTION_ID }}
          export ARM_TENANT_ID=${{ secrets.TENANT_ID }}

      - name: terraform init
        run: terraform init

      - name: terraform validate
        run: terraform validate .

      - name: terraform plan
        run: terraform plan -out outputfile

      - name: terraform apply
        run: terraform apply outputfile